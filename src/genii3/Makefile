# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.37 88/10/08 20:08:30 jim Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

###########################################################################
# Fri Jul 28 16:32:04 PDT 1989 (dredge--stanford)
# "Imake.tmpl": Imake template file for Stanford CAD tools
#
# Do not change the body of the imake template file.  Server-specific
# parameters may be set in the appropriate .def file; site-specific
# parameters (but shared by all servers) may be set in site.def.  If you
# make any changes, you'll need to rebuild the makefiles using
# "make Makefile; make Makefiles" (at least) in the top level directory.
#
# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom ("make depend" will do this automatically).
#

###########################################################################
# platform-specific configuration parameters - edit Sun.def to change

          SHELL = /bin/sh
             CC = cc
            F77 = f77
           VF77 = $(F77)
            VCC = $(CC)
         RATFOR = ratfor
       CMINUS_C = -c
       FMINUS_C = -c
      VCMINUS_C = -c
      VFMINUS_C = -c
            CPP = /lib/cpp
        INSTALL = install -c -m
             RM = rm -f
          RMDIR = rm -rf
          MKDIR = mkdir
          CHMOD = chmod
             MV = mv
             CP = cp
             LN = ln -s
         RANLIB = ranlib
RANLIBINSTFLAGS = -t
             AR = ar clq
           LINT = lint
       LINTOPTS = -axz
           MAKE = make
          NROFF = nroff
       MANFLAGS = -man
     NROFF_FILT = | colcrt -

###########################################################################
# site-specific configuration parameters - edit site.def to change

# site.def: Thu Sep  7 11:15:10 PDT 1989 (dredge--stanford)

###########################################################################
# definitions common to all Makefiles - do not edit

        SYSTYPE = -DBSD
    SYSINCLUDES = -I"/tmp/icl"/include
        DESTDIR = "/tmp/icl"
         BINDIR = "/tmp/icl"/bin
         INCDIR = "/tmp/icl"/include
         LIBDIR = "/tmp/icl"/lib
         MANDIR = "/tmp/icl"/man
         MANEXT = l

     PLOTCAPDIR = "/tmp/icl"/lib
        PLOTCAP = "/tmp/icl"/lib/plotcap

    PLOTCAPLIBS = "/tmp/icl"/lib/libhigh2.a "/tmp/icl"/lib/libgplot.a
 F77PLOTCAPLIBS = "/tmp/icl"/lib/libgplotF77.a "/tmp/icl"/lib/libhigh2.a "/tmp/icl"/lib/libgplot.a
      GENII3LIB = "/tmp/icl"/lib/libgenii.a
     GENII3PROG = "/tmp/icl"/bin/genii3
       SPIFILIB = "/tmp/icl"/lib/libspifi0.a
         SYSF77 = "/tmp/icl"/lib/libsysf77.a
        F77LIBS = -lF77 -lI77 -lU77

      EDLINELIB = "/tmp/icl"/lib/libedline.a

     C_TOOLLIBS = $(SPIFILIB) $(PLOTCAPLIBS) $(EDLINELIB)
   F77_TOOLLIBS = $(GENII3LIB) $(SPIFILIB) $(F77PLOTCAPLIBS) $(SYSF77) $(EDLINELIB)
    VC_TOOLLIBS = $(C_TOOLLIBS)
  VF77_TOOLLIBS = $(F77_TOOLLIBS)

     PISCES_DIR = "/tmp/icl"/pisces
   SUPREM35_DIR = "/tmp/icl"/suprem35

   INSTBINFLAGS = 0755
   INSTLIBFLAGS = 0664
   INSTINCFLAGS = 0444
   INSTMANFLAGS = 0444
  INSTFILEFLAGS = 0444
   INSTDIRFLAGS = 0755
  COPYFILEFLAGS = 0644
   COPYBINFLAGS = 0755

    CDEBUGFLAGS =  -O
    FDEBUGFLAGS =  -O -u
   VCDEBUGFLAGS =  -O
   VFDEBUGFLAGS =  -O -u

        MAKEDEP = makedep
  MAKEDEP_FLAGS = -o Makefile.dep -N $(INCLUDES) $(SYSINCLUDES)
 MAKEDEP_OUTPUT =

CPPFLAGS= $(INCLUDES) $(DEFINES) $(SYSTYPE) $(SYSINCLUDES)
CFLAGS = $(CDEBUGFLAGS) $(CPPFLAGS)
FFLAGS = $(FDEBUGFLAGS) $(CPPFLAGS)
VCFLAGS = $(VCDEBUGFLAGS) $(CPPFLAGS)
VFFLAGS = $(VFDEBUGFLAGS) $(CPPFLAGS)
         RFLAGS = -6 -C
       CLDFLAGS = $(CDEBUGFLAGS)
       FLDFLAGS = $(FDEBUGFLAGS)
      VCLDFLAGS = $(VCDEBUGFLAGS)
      VFLDFLAGS = $(VFDEBUGFLAGS)

LINT = lint
LINTFLAGS = -hxanc $(INCLUDES) $(DEFINES) $(SYSTYPE) $(SYSINCLUDES)
LINTLIBFLAGS = $(INCLUDES) $(DEFINES) $(SYSTYPE) $(SYSINCLUDES) -v -C
LINTDIR = "/tmp/icl"/lib

        MATHLIB = -lm
        SYSLIBS =  -ltermcap $(MATHLIB)

      MACROFILE = Sun.def
         SYSDEF = -DSUN4
      SHELL_EXT = .sh

# Imake parameters
          IRULE = /tmp/release/utils/imakesrc
          IMAKE = /tmp/bin/imake
   ICONFIGFILES = Imakefile $(IRULE)/Imake.tmpl $(IRULE)/$(MACROFILE) \
			$(IRULE)/site.def $(IRULE)/Imake.rules

  IMAKE_DEFINES =
      IMAKE_CMD = $(IMAKE) -TImake.tmpl -I$(IRULE)/Defaults -I$(IRULE) \
			-s Makefile $(SYSDEF) $(IMAKE_DEFINES) \
			'-DImakeDefines=$(IMAKE_DEFINES)'

         RM_CMD = $(RM) *.CKP *.BAK *.bak *.o core ,* *~ *.a \
			.emacs_* tags make.log

# The user Imakefile could probably override this
     RELEASEDIR = release

# Some Makes are compiled with the .f and .r reverses
#  anyway, make sure that we get what we really want.

.SUFFIXES:

.SUFFIXES: .o .r .F .f .c

# Specific rules.

.c.o:
	$(CC) $(CMINUS_C) $(CFLAGS) $*.c

.f.o:
	$(F77) $(FMINUS_C) $(FFLAGS) $*.f

.r.o:
	$(RATFOR) $(RFLAGS) $*.r > $*.f
	$(F77) $(FMINUS_C) $(FFLAGS) $*.f

###########################################################################
# start of Imakefile

# Tue Mar  6 17:10:27 PST 1990 (dredge--stanford)
# "Imakefile" : make file for genii
#
# written:  22 nov 83 (mje)
# modified: 08 jul 87 (mje--stanford) Fixed up for library-able version.
# modified: 15 dec 87 (mje--stanford) Added 'release' target.
# modified: 06 may 88 (mje--stanford) FEXIST funtion added.
# modified: 18 jul 88 (mje--stanford) CENSTR subr added.
# modified: 09 sep 89 (mje--stanford) Converted to Imakefile format
#	Converted all code for straight fortran-77 (no more ratfor)
# modified: 06 feb 90 (mje--stanford) added gniend

# -----------------------------------------------------------------------------
# Things that are easy to change.

VERS=3.9

BIN=genii3
LIB=libgenii3.a

INCLUDES=-I.

# -----------------------------------------------------------------------------
# The Code is broken up as follows:
#	MAIN	- the main program; to call the lib from the outside.
#	GEN_xxx	- the Genii library (w/ main makes the genii program)
#	GTV_xxx	- the GTVAL() function (w/ opnfl(), clsfl()) is all that
#		  a user program needs (if running the genii program from
#		  outside).
#	MIS_xxx	- misc stuff use by GEN_ and GTV_

MAIN_SRC=genii3.f
MAIN_OBJ=genii3.o

F=f

# The GENII library code.
LIB_SRC=cmpch.$F cpack.$F findc.$F gener.$F genii.$F \
	gerst.$F getln.$F getrl.$F initl.$F mapch.$F \
	outpt.$F parky.$F parse.$F redln.$F scomp.$F setvl.$F skipc.$F \
	genilu.$F gnget1.$F genien.$F genipm.$F gnincl.$F gniend.$F

LIB_OBJ=cmpch.o cpack.o findc.o gener.o genii.o \
	gerst.o getln.o getrl.o initl.o mapch.o \
	outpt.o parky.o parse.o redln.o scomp.o setvl.o skipc.o \
	genilu.o gnget1.o genien.o genipm.o gnincl.o gniend.o

# censtr included for users (if they want it...), it is not used in GENII
GTV_SRC=gtval.$F gtxval.$F censtr.$F
GTV_OBJ=gtval.o gtxval.o censtr.o

# ... These may have some local modifications added.
OPEN_SRC= opnfl.$F fexist.$F
OPEN_OBJ= opnfl.o fexist.o

MIS_SRC=$(OPEN_SRC) clsfl.$F
MIS_OBJ=$(OPEN_OBJ) clsfl.o

INC=	genidf.inc genicm.inc common.inc

# Combine what we need here.
SOURCES=$(MAIN_SRC) $(LIB_SRC) $(GTV_SRC) $(MIS_SRC) $(OPEN_SRC)
OBJECTS=$(MAIN_OBJ) $(LIB_OBJ) $(GTV_OBJ) $(MIS_OBJ) $(OPEN_OBJ)

# -----------------------------------------------------------------------------

all:: $(LIB) $(BIN)

# The library version (sans MAIN)
# NOTE: this assumes that your loader can extract just what it needs from
#   the library archive.  If not you may want to have 3 libraries:
#	libgenii.a, libgtval.a, libgenmisc.a  (or something).

$(LIB): $(LIB_OBJ) $(GTV_OBJ) $(MIS_OBJ)
	$(RM) $@
	$(AR) $(LIB) $(LIB_OBJ) $(GTV_OBJ) $(MIS_OBJ)
	$(RANLIB) $(RANLIBFLAGS) $(LIB)
	@echo make $(LIB) done.

# With a main. (gtv_xxx) for the block common decl.

$(BIN): $(MAIN_OBJ) $(LIB)
	$(RM) $@
	$(F77) -o $@ $(FLDFLAGS) $(MAIN_OBJ) $(LIB) $(EDLINELIB) $(SYSF77) $(SYSLIBS)
	@echo make $(BIN) done.

clean::
	$(RM) $(BIN)

# Install the library and the program.

install:: $(GENII3PROG)
$(GENII3PROG): $(BIN)
	$(INSTALL) $(INSTBINFLAGS) $(BIN) $(GENII3PROG)

install:: $(GENII3LIB)
$(GENII3LIB): $(LIB)
	$(INSTALL) $(INSTLIBFLAGS) $(LIB) $(GENII3LIB)
	$(RANLIB) $(RANLIBINSTFLAGS) $(GENII3LIB)

# to test new ports (or versions) of genii with a simple main.

gtest: gtest.o $(LIB)
	$(RM) $@
	$(F77) -o $@ $(FLDFLAGS) gtest.o $(LIB) $(EDLINELIB) $(SYSF77) $(SYSLIBS)
	@echo make gtest done.

clean::
	$(RM) gtest

# the example in the manual...

exam: exprog.o exmisc.o $(LIB)
	$(RM) $@
	$(F77) -o $@ $(FLDFLAGS) exprog.o exmisc.o $(LIB)   $(SYSLIBS)
	@echo make exam done.

clean::
	$(RM) exam

# ---------------------------------------------------------------------------
# clean up the genii directory.
clean::
	$(RM) g.pkey g.prs

# ---------------------------------------------------------------------------

###########################################################################
# Imake.tmpl common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD)

Makefile:: $(ICONFIGFILES)
	-@if [ -f Makefile ] ; then \
	$(RM) Makefile.bak; $(CP) Makefile Makefile.bak;\
	fi
	$(IMAKE_CMD)

depend::
	$(MAKEDEP) $(MAKEDEP_FLAGS) $(SOURCES)

lint::
	$(LINT) $(LINTFLAGS) $(CSOURCES) $(LINTLIBS)

release::
	@echo "release done."

Makefiles::
	@echo "Makefiles done."
install::
	@echo "install done."
lintlibs::
	@echo "lintlibs done."

# Force any target -- make it depend on 'Please'
Please:

###########################################################################
# dependencies generated by makedepend

