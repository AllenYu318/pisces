# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.37 88/10/08 20:08:30 jim Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

###########################################################################
# Fri Jul 28 16:32:04 PDT 1989 (dredge--stanford)
# "Imake.tmpl": Imake template file for Stanford CAD tools
#
# Do not change the body of the imake template file.  Server-specific
# parameters may be set in the appropriate .def file; site-specific
# parameters (but shared by all servers) may be set in site.def.  If you
# make any changes, you'll need to rebuild the makefiles using
# "make Makefile; make Makefiles" (at least) in the top level directory.
#
# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom ("make depend" will do this automatically).
#

###########################################################################
# platform-specific configuration parameters - edit Sun.def to change

          SHELL = /bin/sh
             CC = cc
            F77 = f77
           VF77 = $(F77)
            VCC = $(CC)
         RATFOR = ratfor
       CMINUS_C = -c
       FMINUS_C = -c
      VCMINUS_C = -c
      VFMINUS_C = -c
            CPP = /lib/cpp
        INSTALL = install -c -m
             RM = rm -f
          RMDIR = rm -rf
          MKDIR = mkdir
          CHMOD = chmod
             MV = mv
             CP = cp
             LN = ln -s
         RANLIB = ranlib
RANLIBINSTFLAGS = -t
             AR = ar clq
           LINT = lint
       LINTOPTS = -axz
           MAKE = make
          NROFF = nroff
       MANFLAGS = -man
     NROFF_FILT = | colcrt -

###########################################################################
# site-specific configuration parameters - edit site.def to change

# site.def: Thu Sep  7 11:15:10 PDT 1989 (dredge--stanford)

###########################################################################
# definitions common to all Makefiles - do not edit

        SYSTYPE = -DBSD
    SYSINCLUDES = -I"/tmp/icl"/include
        DESTDIR = "/tmp/icl"
         BINDIR = "/tmp/icl"/bin
         INCDIR = "/tmp/icl"/include
         LIBDIR = "/tmp/icl"/lib
         MANDIR = "/tmp/icl"/man
         MANEXT = l

     PLOTCAPDIR = "/tmp/icl"/lib
        PLOTCAP = "/tmp/icl"/lib/plotcap

    PLOTCAPLIBS = "/tmp/icl"/lib/libhigh2.a "/tmp/icl"/lib/libgplot.a
 F77PLOTCAPLIBS = "/tmp/icl"/lib/libgplotF77.a "/tmp/icl"/lib/libhigh2.a "/tmp/icl"/lib/libgplot.a
      GENII3LIB = "/tmp/icl"/lib/libgenii.a
     GENII3PROG = "/tmp/icl"/bin/genii3
       SPIFILIB = "/tmp/icl"/lib/libspifi0.a
         SYSF77 = "/tmp/icl"/lib/libsysf77.a
        F77LIBS = -lF77 -lI77 -lU77

      EDLINELIB = "/tmp/icl"/lib/libedline.a

     C_TOOLLIBS = $(SPIFILIB) $(PLOTCAPLIBS) $(EDLINELIB)
   F77_TOOLLIBS = $(GENII3LIB) $(SPIFILIB) $(F77PLOTCAPLIBS) $(SYSF77) $(EDLINELIB)
    VC_TOOLLIBS = $(C_TOOLLIBS)
  VF77_TOOLLIBS = $(F77_TOOLLIBS)

     PISCES_DIR = "/tmp/icl"/pisces
   SUPREM35_DIR = "/tmp/icl"/suprem35

   INSTBINFLAGS = 0755
   INSTLIBFLAGS = 0664
   INSTINCFLAGS = 0444
   INSTMANFLAGS = 0444
  INSTFILEFLAGS = 0444
   INSTDIRFLAGS = 0755
  COPYFILEFLAGS = 0644
   COPYBINFLAGS = 0755

    CDEBUGFLAGS =  -O
    FDEBUGFLAGS =  -O -u
   VCDEBUGFLAGS =  -O
   VFDEBUGFLAGS =  -O -u

        MAKEDEP = makedep
  MAKEDEP_FLAGS = -o Makefile.dep -N $(INCLUDES) $(SYSINCLUDES)
 MAKEDEP_OUTPUT =

CPPFLAGS= $(INCLUDES) $(DEFINES) $(SYSTYPE) $(SYSINCLUDES)
CFLAGS = $(CDEBUGFLAGS) $(CPPFLAGS)
FFLAGS = $(FDEBUGFLAGS) $(CPPFLAGS)
VCFLAGS = $(VCDEBUGFLAGS) $(CPPFLAGS)
VFFLAGS = $(VFDEBUGFLAGS) $(CPPFLAGS)
         RFLAGS = -6 -C
       CLDFLAGS = $(CDEBUGFLAGS)
       FLDFLAGS = $(FDEBUGFLAGS)
      VCLDFLAGS = $(VCDEBUGFLAGS)
      VFLDFLAGS = $(VFDEBUGFLAGS)

LINT = lint
LINTFLAGS = -hxanc $(INCLUDES) $(DEFINES) $(SYSTYPE) $(SYSINCLUDES)
LINTLIBFLAGS = $(INCLUDES) $(DEFINES) $(SYSTYPE) $(SYSINCLUDES) -v -C
LINTDIR = "/tmp/icl"/lib

        MATHLIB = -lm
        SYSLIBS =  -ltermcap $(MATHLIB)

      MACROFILE = Sun.def
         SYSDEF = -DSUN4
      SHELL_EXT = .sh

# Imake parameters
          IRULE = /tmp/release/utils/imakesrc
          IMAKE = /tmp/bin/imake
   ICONFIGFILES = Imakefile $(IRULE)/Imake.tmpl $(IRULE)/$(MACROFILE) \
			$(IRULE)/site.def $(IRULE)/Imake.rules

  IMAKE_DEFINES =
      IMAKE_CMD = $(IMAKE) -TImake.tmpl -I$(IRULE)/Defaults -I$(IRULE) \
			-s Makefile $(SYSDEF) $(IMAKE_DEFINES) \
			'-DImakeDefines=$(IMAKE_DEFINES)'

         RM_CMD = $(RM) *.CKP *.BAK *.bak *.o core ,* *~ *.a \
			.emacs_* tags make.log

# The user Imakefile could probably override this
     RELEASEDIR = release

# Some Makes are compiled with the .f and .r reverses
#  anyway, make sure that we get what we really want.

.SUFFIXES:

.SUFFIXES: .o .r .F .f .c

# Specific rules.

.c.o:
	$(CC) $(CMINUS_C) $(CFLAGS) $*.c

.f.o:
	$(F77) $(FMINUS_C) $(FFLAGS) $*.f

.r.o:
	$(RATFOR) $(RFLAGS) $*.r > $*.f
	$(F77) $(FMINUS_C) $(FFLAGS) $*.f

###########################################################################
# start of Imakefile

##----------------------------------------------------------------------
##  Copyright 1986 by
##  The Board of Trustees of the Leland Stanford Junior University
##  All rights reserved.
##
##  This routine may not be used without the prior written consent of
##  the Board of Trustees of the Leland Stanford University.
##----------------------------------------------------------------------

# "f77" : make file for gplot software library. for the f77 compatable stuff
# date: 30 dec 86 (mje)

# -----------------------------------------------------------------------------
#  Easily changed things....

# destination directory and library name.
LINKLIB  = libgplotF77.a

# Where the fortran include one will go (we're going to make this!).
INCFILE= gplot.inc

# Where the non-system gplot.h file is.
GPHDIR=../gplot
GPLOTH= $(GPHDIR)/gplot.h

INCLUDES= -I$(GPHDIR)

# end of easily changed things.
# -----------------------------------------------------------------------------

SRCS_OLDBSD=  high2-f77.c gplot2-f77.c macros-f77.c nwstrc.c
OBJS_OLDBSD=  high2-f77.o gplot2-f77.o macros-f77.o
SRCS=$(SRCS_OLDBSD)
OBJS=$(OBJS_OLDBSD)

SRCS=	high2_bsd.c fplot2_bsd.c fpmisc_bsd.c macros_bsd.c nwstrc.c
OBJS=	high2_bsd.o fplot2_bsd.o fpmisc_bsd.o macros_bsd.o

# Files in the f77 links library.
SOURCES= $(SRCS)
OBJECTS= $(OBJS)

# -----------------------------------------------------------------------------

# ====== make file library. ======

all:: $(LINKLIB)

$(LINKLIB): $(OBJECTS)
	$(RM) $@
	$(AR) $(LINKLIB) $(OBJECTS)
	$(RANLIB) $(RANLIBFLAGS) $(LINKLIB)
	@echo make $(LINKLIB) done.

# ====== Install everything ========

install:: $(LIBDIR)/$(LINKLIB)
$(LIBDIR)/$(LINKLIB): $(LINKLIB)
	$(INSTALL) $(INSTLIBFLAGS) $(LINKLIB) $(LIBDIR)/$(LINKLIB)
	$(RANLIB) $(RANLIBINSTFLAGS) $(LIBDIR)/$(LINKLIB)

install:: $(INCDIR)/$(INCFILE)
$(INCDIR)/$(INCFILE): $(INCFILE)
	$(INSTALL) $(INSTFILEFLAGS) $(INCFILE) $(INCDIR)/$(INCFILE)

# ======= Misc targets ==================

# Create the fortran include file from the C version.
${INCFILE}: cpp2f ${GPLOTH}
	./cpp2f ${GPLOTH}  > ${INCFILE}

cpp2f: cpp2f.o
	$(RM) $@
	$(CC) -o $@ $(CLDFLAGS) cpp2f.o     $(SYSLIBS)
	@echo make cpp2f done.

clean::
	$(RM) cpp2f

macros_f77.o::$(INCFILE)

# Test program to see if the links work or not!

ftest: ftest.o $(LINKLIB)
	$(RM) $@
	$(F77) -o $@ $(FLDFLAGS) ftest.o $(LINKLIB)   $(F77_TOOLLIBS) $(SYSLIBS)
	@echo make ftest done.

clean::
	$(RM) ftest

# Non-portable, but you should get the idea from this...
# See if the test-port worked by checking the output against the
# "standard" output.
runtest: ftest ftest.std
	./ftest
	cmp ftest.std ftest.out

clean::
	$(RM) ftest.out

# In case we have no "standard", establish one.
ftest.std:
	./ftest
	$(MV) ftest.out ftest.std

###########################################################################
# Imake.tmpl common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD)

Makefile:: $(ICONFIGFILES)
	-@if [ -f Makefile ] ; then \
	$(RM) Makefile.bak; $(CP) Makefile Makefile.bak;\
	fi
	$(IMAKE_CMD)

depend::
	$(MAKEDEP) $(MAKEDEP_FLAGS) $(SOURCES)

lint::
	$(LINT) $(LINTFLAGS) $(CSOURCES) $(LINTLIBS)

release::
	@echo "release done."

Makefiles::
	@echo "Makefiles done."
install::
	@echo "install done."
lintlibs::
	@echo "lintlibs done."

# Force any target -- make it depend on 'Please'
Please:

###########################################################################
# dependencies generated by makedepend

macros_bsd.o: \
	../gplot/gplot.h \
	nwstrc.c
high2_bsd.o: \
	nwstrc.c

